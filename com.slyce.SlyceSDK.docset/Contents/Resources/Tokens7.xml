<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/SFCameraViewControllerDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/SFCameraViewControllerDelegate</TokenIdentifier>
			<Abstract type="html">The protocol by which the delegate is kept notified of SFCameraViewController&apos;s various functionalities.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didDetectBarcode:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that the continuous scanner did recognize a barcode.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SFBarcode</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didDetectBarcode:(SFBarcode *)barcode</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>barcode</Name>
					<Abstract type="html">recognized barcode object. Guranteed to be non-nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didDetectBarcode:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didReceiveBarcodeInfo:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that additional info for the previously
recognized barcode has been found.
The result is an NSURL representing the additional the url to the matched product.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didReceiveBarcodeInfo:(NSURL *)productURL</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>productURL</Name>
					<Abstract type="html">NSURL represeting the url to the product found. Cannot be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didReceiveBarcodeInfo:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didDetectImage:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that 2D products for the image from the
current video
frame have been found. The result is an NSDictionary representing a short info about the matched products
and their contents in key-value pairs.
have been found. This method is called upon a successful match either from a live video preview
(automatic match) or from an image -
either captured by pressing the snap button or picked from the Photo Library (manual match).</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didDetectImage:(NSDictionary *)imageInfo</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>imageInfo</Name>
					<Abstract type="html">NSDictionary represeting a short info about the matched 2D products. Can
be nil in case no match has been found.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didDetectImage:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didReceiveImageInfo:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that additional info for the previously
recognized 2D
products has been found. The result is an NSArray representing the additional products
info in key-value pairs.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didReceiveImageInfo:(NSArray *)products</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>products</Name>
					<Abstract type="html">NSArray represeting the 2D products found. Cannot be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didReceiveImageInfo:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didReceiveResults:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that 3D products for the image from the current
video frame or from Photo Library has been found. This method is called upon a successful
match from a manual request - either from an image captured by pressing the snap button or
from an image picked from the Photo Library.

You must press the snap button or pick a photo from the Photo Library on the device in order
to start the 3D recognition process.

The result is an NSDictionary representing the matched 3D products and some metadata. Guranteed to be non-nil.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didReceiveResults:(NSDictionary *)results</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>results</Name>
					<Abstract type="html">NSDictionary represeting the matched 3D products and some metadata. Cannot be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didReceiveResults:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didReceiveResultsExt:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that results for the image in the request
have been found. The result is an NSString representing the extended info that retrieved from the server.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didReceiveResultsExt:(NSString *)results</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>results</Name>
					<Abstract type="html">NSString containing the extended info that retrieved from the server.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didReceiveResultsExt:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didFailWithError:</TokenIdentifier>
			<Abstract type="html">Informs that an error has occured while trying to fulfil some task of the 2D recognition engine (verification of credentials,
sync with local storage, no response from the matching server, etc).

This method is only called when using the Premium account.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didFailWithError:(NSError *)error</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>error</Name>
					<Abstract type="html">the encountered scanning error.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didFailWithError:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didProgressToStage:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate of the progress done in matching the
image snapped by reporting the stage
currently being processed.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didProgressToStage:(SFRequestStage)stage</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>stage</Name>
					<Abstract type="html">enum representing the current recognition stage.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didProgressToStage:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didProgressToValue:withMessage:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate of the progress done in matching the
image snapped by reporting a numeric value and
informative message.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didProgressToValue:(CGFloat)value withMessage:(NSString *)message</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>value</Name>
					<Abstract type="html">a percentage from the whole search process (from 0 to 1).</Abstract>
				</Parameter><Parameter>
					<Name>message</Name>
					<Abstract type="html">a short description of the current search stage.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didProgressToValue:withMessage:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didProgressExt:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate of the progress extended info that retrieved from the server.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didProgressExt:(NSString *)progress</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>progress</Name>
					<Abstract type="html">NSString containing the progress extended info that retrieved from the server.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didProgressExt:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didFinishWithStatus:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that the Slyce 3D search has finished.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SFRequest</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didFinishWithStatus:(SFStatusType)statusType</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>statusType</Name>
					<Abstract type="html">the status about the current request. Refer to SFRequest to see the possible status values.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didFinishWithStatus:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didSnapImage:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that an image object from the current video frame is ready.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didSnapImage:(UIImage *)image</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>image</Name>
					<Abstract type="html">representing the video frame captured when pressed the snap button.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didSnapImage:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didStartRequest:forImage:</TokenIdentifier>
			<Abstract type="html">Informs the delegate the image matching process has started.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didStartRequest:(SFRequest *)request forImage:(UIImage *)image</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>request</Name>
					<Abstract type="html">the request fulfilling the image recognition.</Abstract>
				</Parameter><Parameter>
					<Name>image</Name>
					<Abstract type="html">the image being searched. The image is the video frame captured when
snap button was pressed.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didStartRequest:forImage:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewControllerWasDismissed:</TokenIdentifier>
			<Abstract type="html">Informs the delegate the camera view controller finished dismissing.</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewControllerWasDismissed:(SFCameraViewController *)cameraViewController</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewControllerWasDismissed:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didFinishWith3DProducts:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that 3D products for the image from the current
video frame or from Photo Library has been found. This method is called upon a successful
match from a manual request - either from an image captured by pressing the snap button or
from an image picked from the Photo Library.

You must press the snap button or pick a photo from the Photo Library on the device in order
to start the 3D recognition process.

The result is an NSDictionary representing the matched 3D products and some metadata. Guranteed to be non-nil. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; since 1.9. Use sfCameraViewController:didReceiveResults: instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didFinishWith3DProducts:(NSDictionary *)products</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>products</Name>
					<Abstract type="html">NSDictionary represeting the matched 3D products and some metadata. Cannot be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didFinishWith3DProducts:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didRecognizeBarcode:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that the continuous scanner did recognize a barcode. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; since 1.9. Use sfCameraViewController:didDetectBarcode: instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/cl/SFBarcode</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didRecognizeBarcode:(SFBarcode *)barcode</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>barcode</Name>
					<Abstract type="html">recognized barcode object. Guranteed to be non-nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didRecognizeBarcode:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didFinishWithEncodedString:and2DProductInfo:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that 2D products for the image from the
current video
frame have been found. The result is base64 encoded string representation of the products
along with an additional NSDictionary representing a short info about the matched products
and their contents in key-value pairs.
have been found. This method is called upon a successful match either from a live video preview
(automatic match) or from an image -
either captured by pressing the snap button or picked from the Photo Library (manual match).

The result is an NSDictionary representing matched products and their contents in key-value
pairs. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; since 1.9. Use sfCameraViewController:didDetectImage: instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didFinishWithEncodedString:(NSString *)encodedString and2DProductInfo:(NSDictionary *)productInfo</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>encodedString</Name>
					<Abstract type="html">string representing the recognized 2D products in base64 format. Can be
nil in case no match has been found.</Abstract>
				</Parameter><Parameter>
					<Name>productInfo</Name>
					<Abstract type="html">NSDictionary represeting a short info about the matched 2D products. Can
be nil in case no match has been found.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didFinishWithEncodedString:and2DProductInfo:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/SFCameraViewControllerDelegate/sfCameraViewController:didFinishWithExtendedInfoFor2DProducts:</TokenIdentifier>
			<Abstract type="html">Informs the SFCameraViewControllerDelegate that additional info for the previously
recognized 2D
products has been found. The result is an NSArray representing the additional products
info in key-value pairs. (&lt;b class=&quot;deprecated&quot;&gt;Deprecated:&lt;/b&gt;&lt;span class=&quot;deprecated&quot;&gt; since 1.9. Use sfCameraViewController:didReceiveImageInfo: instead.&lt;/span&gt;)</Abstract>
			<DeclaredIn>SFCameraViewControllerDelegate.h</DeclaredIn>
			
			<Declaration>- (void)sfCameraViewController:(SFCameraViewController *)cameraViewController didFinishWithExtendedInfoFor2DProducts:(NSArray *)products</Declaration>
			<Parameters>
				<Parameter>
					<Name>cameraViewController</Name>
					<Abstract type="html">the current SFCameraViewController.</Abstract>
				</Parameter><Parameter>
					<Name>products</Name>
					<Abstract type="html">NSArray represeting the 2D products found. Cannot be nil.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/sfCameraViewController:didFinishWithExtendedInfoFor2DProducts:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
        
	</File>
</Tokens>