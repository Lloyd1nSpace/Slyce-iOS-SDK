<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/SFCameraViewController.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/SFCameraViewController</TokenIdentifier>
			<Abstract type="html">Provides an integrated UIViewController with all the Slyce SDK functionalities.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
            
			
			<NodeRef refid="3"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/setDelegate:</TokenIdentifier>
			<Abstract type="html">The camera view controller delegate that will be notified of scan results.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;SFCameraViewControllerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/delegate</TokenIdentifier>
			<Abstract type="html">The camera view controller delegate that will be notified of scan results.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;SFCameraViewControllerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFCameraViewController/delegate</TokenIdentifier>
			<Abstract type="html">The camera view controller delegate that will be notified of scan results.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>@property (weak, nonatomic) id&lt;SFCameraViewControllerDelegate&gt; delegate</Declaration>
			
			
			<Anchor>//api/name/delegate</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/setOptions:</TokenIdentifier>
			<Abstract type="html">Options dictionary.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDictionary *options</Declaration>
			
			
			<Anchor>//api/name/options</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/options</TokenIdentifier>
			<Abstract type="html">Options dictionary.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDictionary *options</Declaration>
			
			
			<Anchor>//api/name/options</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFCameraViewController/options</TokenIdentifier>
			<Abstract type="html">Options dictionary.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, copy) NSDictionary *options</Declaration>
			
			
			<Anchor>//api/name/options</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/setCameraView:</TokenIdentifier>
			<Abstract type="html">A handle to the underlying camera/scanner view used.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) SFCameraView *cameraView</Declaration>
			
			
			<Anchor>//api/name/cameraView</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/cameraView</TokenIdentifier>
			<Abstract type="html">A handle to the underlying camera/scanner view used.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) SFCameraView *cameraView</Declaration>
			
			
			<Anchor>//api/name/cameraView</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/SFCameraViewController/cameraView</TokenIdentifier>
			<Abstract type="html">A handle to the underlying camera/scanner view used.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>@property (strong, nonatomic, readonly) SFCameraView *cameraView</Declaration>
			
			
			<Anchor>//api/name/cameraView</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/setCustomHelpViewController:</TokenIdentifier>
			<Abstract type="html">Used to override the default &apos;help&apos; viewController with your custom viewController.

</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>- (void)setCustomHelpViewController:(id)customHelpView</Declaration>
			<Parameters>
				<Parameter>
					<Name>customHelpView</Name>
					<Abstract type="html">The custom viewController.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCustomHelpViewController:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/setCustomNotFoundViewController:</TokenIdentifier>
			<Abstract type="html">Used to override the default &apos;not found&apos; viewController with your custom viewController.

</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>- (void)setCustomNotFoundViewController:(id)customNotFoundView</Declaration>
			<Parameters>
				<Parameter>
					<Name>customNotFoundView</Name>
					<Abstract type="html">The custom viewController.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCustomNotFoundViewController:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/setCustomBtnWithVC:postionInPercentX:postionInPercentY:btnImage:popUpAnimation:</TokenIdentifier>
			<Abstract type="html">Add your own custom button with a custom viewController to the SFCameraViewController(Full UI mode).</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>- (void)setCustomBtnWithVC:(id)viewController postionInPercentX:(CGFloat)x postionInPercentY:(CGFloat)y btnImage:(UIImage *)btnImage popUpAnimation:(BOOL)popUpAnimation</Declaration>
			<Parameters>
				<Parameter>
					<Name>viewController</Name>
					<Abstract type="html">Your Custom viewController.</Abstract>
				</Parameter><Parameter>
					<Name>x</Name>
					<Abstract type="html">Position of the custom button in percent, when 100% is width of the screen.</Abstract>
				</Parameter><Parameter>
					<Name>y</Name>
					<Abstract type="html">Position of the custom button in percent, when 100% is height of the screen.</Abstract>
				</Parameter><Parameter>
					<Name>btnImage</Name>
					<Abstract type="html">The image of the custom button.</Abstract>
				</Parameter><Parameter>
					<Name>popUpAnimation</Name>
					<Abstract type="html">PopUp animation.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/setCustomBtnWithVC:postionInPercentX:postionInPercentY:btnImage:popUpAnimation:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/setSlyceLogoHidden:</TokenIdentifier>
			<Abstract type="html"></Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>- (void)setSlyceLogoHidden:(BOOL)slyceLogoHidden</Declaration>
			
			
			<Anchor>//api/name/setSlyceLogoHidden:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/initWithSlyce:resourcesBundle:options:andDelegate:</TokenIdentifier>
			<Abstract type="html">Initializes a new SFCameraViewController object.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
	<RelatedTokens>
		<TokenIdentifier>//apple_ref/occ/intf/SFCameraViewControllerDelegate</TokenIdentifier>
		
	</RelatedTokens>
	
			<Declaration>- (instancetype)initWithSlyce:(SFSlyce *)slyce resourcesBundle:(NSBundle *)resourcesBundle options:(NSDictionary *)options andDelegate:(id&lt;SFCameraViewControllerDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>slyce</Name>
					<Abstract type="html">The initialized Slyce object.</Abstract>
				</Parameter><Parameter>
					<Name>resourcesBundle</Name>
					<Abstract type="html">An optional bundle of resources to use as assets for the current view
controller. In case you wish to use the built-in
SDK&apos;s assets, simply pass nil to this parameter.</Abstract>
				</Parameter><Parameter>
					<Name>options</Name>
					<Abstract type="html">options dictionary (optional). Pass nil for no options.</Abstract>
				</Parameter><Parameter>
					<Name>delegate</Name>
					<Abstract type="html">Object that implements SFCameraViewControllerDelegate protocol.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">Returns an instance of SFCameraViewController.</Abstract></ReturnValue>
			<Anchor>//api/name/initWithSlyce:resourcesBundle:options:andDelegate:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/SFCameraViewController/presentFromViewController:usingAnimation:completionBlock:</TokenIdentifier>
			<Abstract type="html">Presents the SFCameraViewController using animation.</Abstract>
			<DeclaredIn>SFCameraViewController.h</DeclaredIn>
			
			<Declaration>- (void)presentFromViewController:(UIViewController *)fromViewController usingAnimation:(SFAnimationType)animationType completionBlock:(void ( ^ ) ( void ))completionBlock</Declaration>
			<Parameters>
				<Parameter>
					<Name>fromViewController</Name>
					<Abstract type="html">The view controller from which SFCameraViewController is presented.</Abstract>
				</Parameter><Parameter>
					<Name>animationType</Name>
					<Abstract type="html">Presentation animation.</Abstract>
				</Parameter><Parameter>
					<Name>completionBlock</Name>
					<Abstract type="html">block that executes after presenting animation completes.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/presentFromViewController:usingAnimation:completionBlock:</Anchor>
            <NodeRef refid="3"/>
		</Token>
		
        
        
	</File>
</Tokens>